generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id             String          @id @default(cuid())
  email          String          @unique
  publicKey      String          @unique
  name           String
  accounts       Account[]
  SmartContracts SmartContract[]
}

model Account {
  id             String @id @default(cuid())
  name           String @unique
  description    String @default("")
  currencySymbol String
  balance        Float
  userId         String

  User                 User          @relation(fields: [userId], references: [id])
  transactionSender    Transaction[] @relation("TransactionSender")
  transactionRecipient Transaction[] @relation("TransactionRecipient")
  currency             Currency      @relation(fields: [currencySymbol], references: [symbol])
}

model Transaction {
  id          String @id @default(cuid())
  amount      Float
  type        String
  senderId    String
  recipientId String
  signature   String

  comment String   @default("")
  date    DateTime @default(now())

  sender    Account @relation(name: "TransactionSender", fields: [senderId], references: [id])
  recipient Account @relation(name: "TransactionRecipient", fields: [recipientId], references: [id])
}

model Currency {
  symbol      String @id
  name        String @unique
  description String
  type        String @default("fiat")

  Accounts Account[]
}

model SmartContract {
  id String @id @default(cuid())

  name        String
  description String

  triggers    String
  permissions String
  code        String

  author   User   @relation(fields: [authorId], references: [id])
  authorId String

  SmartContractMemory SmartContractMemory?
}

model SmartContractMemory {
  memory          String        @default("{}")
  SmartContract   SmartContract @relation(fields: [smartContractId], references: [id])
  smartContractId String        @unique
}
